


import sys
sys.path.append('../')
sys.path.append('../spacexpython/')
from tinydb import TinyDB, Query
from exceptions import *

import json
import ast

db = TinyDB('matrix.json')      # Connect/Create an existing database
db.purge()                      # If one already exists - purge it.

# Insert all the matrices for the wrappers into the database

# Capsules
db.insert({"function":"capsules","subfunction":"capsules","parameters":[{"parameter":"capsule_serial","example":"C112","type":"str","comment":"Filter by capsule serial number"},{"parameter":"capsule_id","example":"dragon1","type":"str","comment":"Filter by capsule id"},{"parameter":"status","example":"active","type":"str","comment":"Filter by capsule status"},{"parameter":"original_launch","example":"2017-02-19T14:39:00.000ZUTC ISO","type":"timestamp","comment":"Filter by capsule original launch date"},{"parameter":"mission","example":"SpaceX CRS-5","type":"str","comment":"Filter by capsule mission"},{"parameter":"landings","example":"2","type":"int","comment":"Filter by capsule landings"},{"parameter":"type","example":"Dragon 1.1","type":"str","comment":"Filter by capsule type"},{"parameter":"reuse_count","example":" 1","type":"int","comment":"Filter by number of times the capsule was reused"},{"parameter":"id","example":"true","type":"bool","comment":"Set as true to show mongo document ids"},{"parameter":"limit","example":"3","type":"int","comment":"Limit results returned, defaults to all documents returned"},{"parameter":"offset","example":"3","type":"int","comment":"Offset or skip results from the beginning of the query"},{"parameter":"sort","example":"capsule_serial","type":"str","comment":"Change result sorting by setting value to any parameter in this list"},{"parameter":"order","example":"desc","type":"str","comment":"Change result ordering by setting values of asc or desc"}]})
db.insert({"function":"capsules","subfunction":"upcoming","parameters":[{"parameter":"capsule_serial","example":"C112","type":"str","comment":"Filter by capsule serial number"},{"parameter":"id","example":"true","type":"bool","comment":"Set as true to show mongo document ids"}]})
db.insert({"function":"capsules","subfunction":"past","parameters":[{"parameter":"capsule_serial","example":"C112","type":"str","comment":"Filter by capsule serial number"},{"parameter":"capsule_id","example":"dragon1","type":"str","comment":"Filter by capsule id"},{"parameter":"status","example":"active","type":"str","comment":"Filter by capsule status"},{"parameter":"original_launch","example":"2017-02-19T14:39:00.000ZUTC ISO","type":"timestamp","comment":"Filter by capsule original launch date"},{"parameter":"mission","example":"SpaceX CRS-5","type":"str","comment":"Filter by capsule mission"},{"parameter":"landings","example":"2","type":"int","comment":"Filter by capsule landings"},{"parameter":"type","example":"Dragon 1.1","type":"str","comment":"Filter by capsule type"},{"parameter":"reuse_count","example":" 1","type":"int","comment":"Filter by number of times the capsule was reused"},{"parameter":"id","example":"true","type":"bool","comment":"Set as true to show mongo document ids"},{"parameter":"limit","example":"3","type":"int","comment":"Limit results returned, defaults to all documents returned"},{"parameter":"offset","example":"3","type":"int","comment":"Offset or skip results from the beginning of the query"},{"parameter":"sort","example":"capsule_serial","type":"str","comment":"Change result sorting by setting value to any parameter in this list"},{"parameter":"order","example":"desc","type":"str","comment":"Change result ordering by setting values of asc or desc"}]})

# Cores
db.insert({"function":"cores","subfunction":"cores","parameters":[ {"parameter":"core_serial","example":"B1037","type":"string","comment":"Filter by core serial"}, {"parameter":"block","example":"5","type":"int","comment":"Filter by core block number"}, {"parameter":"status","example":"active","type":"string","comment":"Filter by core status"}, {"parameter":"original_launch","example":"2017-07-05T23:35:00.000Z","type":"timestamp","comment":"Filter by core original launch date"}, {"parameter":"mission","example":"Intelsat 35e","type":"string","comment":"Filter by core mission"}, {"parameter":"reuse_count","example":"1","type":"int","comment":"Filter by number of times the core was reused"}, {"parameter":"rtls_attempts","example":"1","type":"int","comment":"Filter by RTLS attempted landings"}, {"parameter":"rtls_landings","example":"1","type":"int","comment":"Filter by RTLS successful landings"}, {"parameter":"asds_attempts","example":"1","type":"int","comment":"Filter by ASDS attempted landings"}, {"parameter":"asds_landings","example":"1","type":"int","comment":"Filter by ASDS successful landings"}, {"parameter":"water_landing","example":"1","type":"bool","comment":"Filter by water landings"}, {"parameter":"id","example":"true","type":"bool","comment":"Set as true to show mongo document ids"}, {"parameter":"limit","example":"3","type":"int","comment":"Limit results returned, defaults to all documents returned"}, {"parameter":"offset","example":"3","type":"int","comment":"Offset or skip results from the beginning of the query"}, {"parameter":"sort","example":"core_serial","type":"string","comment":"Change result sorting by setting value to any parameter in this list"}, {"parameter":"order","example":"desc","type":"string","comment":"Change result ordering by setting values of asc or desc"}]})


