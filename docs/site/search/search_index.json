{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SpaceX API wrapper in Python Simple and Easy API Wrapper for r-spacex/SpaceX-API Documentation This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. Continue to read the Documentation for full wrapper documentation. Installation Note that this supports Python 3 ONLY To install via pip use: pip install spacexPython Basic Usage The usage of the wrapper is very easy. It does not require any initialisation. Just import and start coding: import spacexpython rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data) Credits Jake Meyer's r-spacex/SpaceX-API Based on work by vinayphadnis License","title":"SpaceX API wrapper in Python"},{"location":"#spacex-api-wrapper-in-python","text":"","title":"SpaceX API wrapper in Python"},{"location":"#simple-and-easy-api-wrapper-for-r-spacexspacex-api","text":"","title":"Simple and Easy API Wrapper for r-spacex/SpaceX-API"},{"location":"#documentation","text":"This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. Continue to read the Documentation for full wrapper documentation.","title":"Documentation"},{"location":"#installation","text":"Note that this supports Python 3 ONLY To install via pip use: pip install spacexPython","title":"Installation"},{"location":"#basic-usage","text":"The usage of the wrapper is very easy. It does not require any initialisation. Just import and start coding: import spacexpython rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data)","title":"Basic Usage"},{"location":"#credits","text":"Jake Meyer's r-spacex/SpaceX-API Based on work by vinayphadnis","title":"Credits"},{"location":"#license","text":"","title":"License"},{"location":"detail/Basic-Usage/","text":"Installation To install via pip use: pip install spacexPython Basic Usage To use the wrapper, import the module in any python file: import spacexpython #sample usage: rocket = spacexpython.rockets.falcon1() print(rocket)","title":"Basic Usage"},{"location":"detail/Basic-Usage/#installation","text":"To install via pip use: pip install spacexPython","title":"Installation"},{"location":"detail/Basic-Usage/#basic-usage","text":"To use the wrapper, import the module in any python file: import spacexpython #sample usage: rocket = spacexpython.rockets.falcon1() print(rocket)","title":"Basic Usage"},{"location":"detail/Capsules/","text":"Get all capsule information: capsules = spacexpython.capsules() print(capsule) Get a specific capsule information: capsule = spacexpython.capsule('C112') print(capsule) Get information about upcoming capsules being used: upcoming_capsules = spacexpython.capsules.upcoming() print(upcoming_capsules) Get information about past capsules that have been used: past_capsules = spacexpython.capsules.past() print(past_capsules)","title":"Capsules"},{"location":"detail/Cores/","text":"Get all cores: core_data= spacexpython.cores.cores() print(core_data) Get information about one core: core_data= spacexpython.cores.one('B1042') print(core_data) Get all upcoming cores: core_data= spacexpython.cores.upcoming() print(core_data) Get past cores: core_data= spacexpython.cores.past() print(core_data) For optional parameters (must be included in a JSON document)- see the documentation","title":"Cores"},{"location":"detail/Dragons/","text":"Get all Dragon information: dragons = spacexpython.dragons.dragons() print(dragons) Get a specific Dragon information: dragon = spacexpython.dragons.one('dragon2') print(dragon)","title":"Dragons"},{"location":"detail/History-Information/","text":"Get all Historical event information: all history = spacexpython.history.history() print(all history) Get a specific historical event information: event1 = spacexpython.history.one('1') print(event1)","title":"History Information"},{"location":"detail/Home/","text":"Introduction to SpacePY-X This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. This wiki is created to provide the documentation about the functions available in SpacePY-X. For documentation specific to the SpaceX-API, please see the documentation on the SpaceX-API Github Page Authentication No authentication is currently required by r-SpaceX to use this public API and thus is not required in this wrapper. Rate Limiting The API has a rate limit of 50 req/sec per IP address, if exceeded, a response of 429 will be given until the rate drops back below 50 req/sec. Wrapper Usage Basic Usage Endpoints Capsule Data Core Data Dragon Data History Data Information Landing Pad Data Launch Pads Launch Data Roadster Data Rocket Data","title":"Home"},{"location":"detail/Home/#authentication","text":"No authentication is currently required by r-SpaceX to use this public API and thus is not required in this wrapper.","title":"Authentication"},{"location":"detail/Home/#rate-limiting","text":"The API has a rate limit of 50 req/sec per IP address, if exceeded, a response of 429 will be given until the rate drops back below 50 req/sec.","title":"Rate Limiting"},{"location":"detail/Home/#wrapper-usage","text":"Basic Usage","title":"Wrapper Usage"},{"location":"detail/Home/#endpoints","text":"Capsule Data Core Data Dragon Data History Data Information Landing Pad Data Launch Pads Launch Data Roadster Data Rocket Data","title":"Endpoints"},{"location":"detail/Information/","text":"Get company information: company_data = spacexpython.info() print(company_data) Get API information: api_data = spacexpython.api() print(api_data)","title":"Information"},{"location":"detail/Landing-Pads/","text":"Get all Landing Pad information: landingpads = spacexpython.landingpads.landingpads() print(landing pads) Get a specific Landing Pad information: one = spacexpython.landingpads.one('OCISLY') print(one)","title":"Landing Pads"},{"location":"detail/Launch-Pads/","text":"Get all Launch Pad information: launchpads = spacexpython.launchpads.launchpads() print(launch_pads) Get a specific Launch Pad information: one = spacexpython.launchpads.one('ksc_lc_39a') print(one)","title":"Launch Pads"},{"location":"detail/Launches/","text":"Get latest launch: launch_data = spacexpython.launches.latest() print(launch_data) Get the next Launch: launch_data = spacexpython.launches.next() print(launch_data) Get all upcoming launches: launch_data = spacexpython.launches.upcoming() print(launch_data) Get all upcoming and past launches: launch_data = spacexpython.launches.launches() print(launch_data)","title":"Launches"},{"location":"detail/Missions/","text":"Get all Mission information: missions = spacexpython.missions.missions() print(missions) Get a specific Mission information: one = spacexpython.missions.one('F3364BF') print(one)","title":"Missions"},{"location":"detail/Roadster/","text":"Get Tesla Roadster information: roadster = spacexpython.roadster.roadster() print(roadster)","title":"Roadster"},{"location":"detail/Rockets/","text":"Get all rocket information: rocket_data = spacexpython.rockets.rockets() print(rocket_data) Get information about the Falcon 1: rocket_data = spacexpython.rockets.falcon1() print(rocket_data) Get information about the Falcon 9: rocket_data = spacexpython.rockets.falcon9() print(rocket_data) Get information about the Falcon Heavy: rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data) Get information about the Big Falcon Rocket: rocket_data = spacexpython.rockets.bfr() print(rocket_data)","title":"Rockets"}]}