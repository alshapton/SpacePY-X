{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to SpacePY-X This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. This site provides the documentation about the functions available in SpacePY-X. For documentation specific to the SpaceX-API, please see the documentation on the SpaceX-API Github Page Simple and Easy API Wrapper for r-spacex/SpaceX-API Documentation This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. Continue to read the Documentation for full wrapper documentation. Installation Note that this supports Python 3 ONLY To install via pip use: pip install spacexPython Basic Usage The usage of the wrapper is very easy. It does not require any initialisation. Just import and start coding: import spacexpython rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data) Authentication No authentication is currently required by r-SpaceX to use this public API and thus is not required in this wrapper. Rate Limiting The API has a rate limit of 50 req/sec per IP address, if exceeded, a response of 429 will be given until the rate drops back below 50 req/sec. Credits Jake Meyer's r-spacex/SpaceX-API Based on work by vinayphadnis License","title":"Home"},{"location":"#simple-and-easy-api-wrapper-for-r-spacexspacex-api","text":"","title":"Simple and Easy API Wrapper for r-spacex/SpaceX-API"},{"location":"#documentation","text":"This API Wrapper aims to provide a simple and easy way to use the SpaceX-API in Python projects. Continue to read the Documentation for full wrapper documentation.","title":"Documentation"},{"location":"#installation","text":"Note that this supports Python 3 ONLY To install via pip use: pip install spacexPython","title":"Installation"},{"location":"#basic-usage","text":"The usage of the wrapper is very easy. It does not require any initialisation. Just import and start coding: import spacexpython rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data)","title":"Basic Usage"},{"location":"#authentication","text":"No authentication is currently required by r-SpaceX to use this public API and thus is not required in this wrapper.","title":"Authentication"},{"location":"#rate-limiting","text":"The API has a rate limit of 50 req/sec per IP address, if exceeded, a response of 429 will be given until the rate drops back below 50 req/sec.","title":"Rate Limiting"},{"location":"#credits","text":"Jake Meyer's r-spacex/SpaceX-API Based on work by vinayphadnis","title":"Credits"},{"location":"#license","text":"","title":"License"},{"location":"detail/Usage/","text":"Basic Usage Installation To install via pip use: pip install spacexPython Example Usage To use the wrapper, import the module in any python file: import spacexpython # Example usage: rocket = spacexpython.rockets.falcon1() print(rocket) Capsule Information Get all capsule information: capsules = spacexpython.capsules(parameters,timeOut) print(capsule) Parameters: Name Purpose Mandatory Default parameters JSON list of URL qualifiers in the form {\"status\":\"active\",\"limit\":3 ............etc N timeOut Number of seconds to wait until a timeout occurs N 1 Get a specific capsule information: capsule = spacexpython.capsule('C112') print(capsule) Get information about upcoming capsules being used: upcoming_capsules = spacexpython.capsules.upcoming() print(upcoming_capsules) Get information about past capsules that have been used: past_capsules = spacexpython.capsules.past() print(past_capsules) Base SpaceX API documentation for Capsules Core Information Get all cores: core_data= spacexpython.cores.cores() print(core_data) Get information about one core: core_data= spacexpython.cores.one('B1042') print(core_data) Get all upcoming cores: core_data= spacexpython.cores.upcoming() print(core_data) Get past cores: core_data= spacexpython.cores.past() print(core_data) For optional parameters (must be included in a JSON document)- see the documentation Dragon Information Get all Dragon information: dragons = spacexpython.dragons.dragons() print(dragons) Get a specific Dragon information: dragon = spacexpython.dragons.one('dragon2') print(dragon) History Information Get all Historical event information: all history = spacexpython.history.history() print(all history) Get a specific historical event information: event1 = spacexpython.history.one('1') print(event1) Company Information Get company information: company_data = spacexpython.info() print(company_data) Get API information: api_data = spacexpython.api() print(api_data) Landing Pad Information Get all Landing Pad information: landingpads = spacexpython.landingpads.landingpads() print(landing pads) Get a specific Landing Pad information: one = spacexpython.landingpads.one('OCISLY') print(one) Launch Pad Information Get all Launch Pad information: launchpads = spacexpython.launchpads.launchpads() print(launch_pads) Get a specific Launch Pad information: one = spacexpython.launchpads.one('ksc_lc_39a') print(one) Launch Information Get latest launch: launch_data = spacexpython.launches.latest() print(launch_data) Get the next Launch: launch_data = spacexpython.launches.next() print(launch_data) Get all upcoming launches: launch_data = spacexpython.launches.upcoming() print(launch_data) Get all upcoming and past launches: launch_data = spacexpython.launches.launches() print(launch_data) Mission Information Get all Mission information: missions = spacexpython.missions.missions() print(missions) Get a specific Mission information: one = spacexpython.missions.one('F3364BF') print(one) Roadster Information Get Tesla Roadster information: roadster = spacexpython.roadster.roadster() print(roadster) Rocket Information Get all rocket information: rocket_data = spacexpython.rockets.rockets() print(rocket_data) Get information about the Falcon 1: rocket_data = spacexpython.rockets.falcon1() print(rocket_data) Get information about the Falcon 9: rocket_data = spacexpython.rockets.falcon9() print(rocket_data) Get information about the Falcon Heavy: rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data) Get information about the Big Falcon Rocket: rocket_data = spacexpython.rockets.bfr() print(rocket_data)","title":"Functions"},{"location":"detail/Usage/#basic-usage","text":"","title":"Basic Usage"},{"location":"detail/Usage/#installation","text":"To install via pip use: pip install spacexPython","title":"Installation"},{"location":"detail/Usage/#example-usage","text":"To use the wrapper, import the module in any python file: import spacexpython # Example usage: rocket = spacexpython.rockets.falcon1() print(rocket)","title":"Example Usage"},{"location":"detail/Usage/#capsule-information","text":"Get all capsule information: capsules = spacexpython.capsules(parameters,timeOut) print(capsule) Parameters: Name Purpose Mandatory Default parameters JSON list of URL qualifiers in the form {\"status\":\"active\",\"limit\":3 ............etc N timeOut Number of seconds to wait until a timeout occurs N 1 Get a specific capsule information: capsule = spacexpython.capsule('C112') print(capsule) Get information about upcoming capsules being used: upcoming_capsules = spacexpython.capsules.upcoming() print(upcoming_capsules) Get information about past capsules that have been used: past_capsules = spacexpython.capsules.past() print(past_capsules) Base SpaceX API documentation for Capsules","title":"Capsule Information"},{"location":"detail/Usage/#core-information","text":"Get all cores: core_data= spacexpython.cores.cores() print(core_data) Get information about one core: core_data= spacexpython.cores.one('B1042') print(core_data) Get all upcoming cores: core_data= spacexpython.cores.upcoming() print(core_data) Get past cores: core_data= spacexpython.cores.past() print(core_data) For optional parameters (must be included in a JSON document)- see the documentation","title":"Core Information"},{"location":"detail/Usage/#dragon-information","text":"Get all Dragon information: dragons = spacexpython.dragons.dragons() print(dragons) Get a specific Dragon information: dragon = spacexpython.dragons.one('dragon2') print(dragon)","title":"Dragon Information"},{"location":"detail/Usage/#history-information","text":"Get all Historical event information: all history = spacexpython.history.history() print(all history) Get a specific historical event information: event1 = spacexpython.history.one('1') print(event1)","title":"History Information"},{"location":"detail/Usage/#company-information","text":"Get company information: company_data = spacexpython.info() print(company_data) Get API information: api_data = spacexpython.api() print(api_data)","title":"Company Information"},{"location":"detail/Usage/#landing-pad-information","text":"Get all Landing Pad information: landingpads = spacexpython.landingpads.landingpads() print(landing pads) Get a specific Landing Pad information: one = spacexpython.landingpads.one('OCISLY') print(one)","title":"Landing Pad Information"},{"location":"detail/Usage/#launch-pad-information","text":"Get all Launch Pad information: launchpads = spacexpython.launchpads.launchpads() print(launch_pads) Get a specific Launch Pad information: one = spacexpython.launchpads.one('ksc_lc_39a') print(one)","title":"Launch Pad Information"},{"location":"detail/Usage/#launch-information","text":"Get latest launch: launch_data = spacexpython.launches.latest() print(launch_data) Get the next Launch: launch_data = spacexpython.launches.next() print(launch_data) Get all upcoming launches: launch_data = spacexpython.launches.upcoming() print(launch_data) Get all upcoming and past launches: launch_data = spacexpython.launches.launches() print(launch_data)","title":"Launch Information"},{"location":"detail/Usage/#mission-information","text":"Get all Mission information: missions = spacexpython.missions.missions() print(missions) Get a specific Mission information: one = spacexpython.missions.one('F3364BF') print(one)","title":"Mission Information"},{"location":"detail/Usage/#roadster-information","text":"Get Tesla Roadster information: roadster = spacexpython.roadster.roadster() print(roadster)","title":"Roadster Information"},{"location":"detail/Usage/#rocket-information","text":"Get all rocket information: rocket_data = spacexpython.rockets.rockets() print(rocket_data) Get information about the Falcon 1: rocket_data = spacexpython.rockets.falcon1() print(rocket_data) Get information about the Falcon 9: rocket_data = spacexpython.rockets.falcon9() print(rocket_data) Get information about the Falcon Heavy: rocket_data = spacexpython.rockets.falconHeavy() print(rocket_data) Get information about the Big Falcon Rocket: rocket_data = spacexpython.rockets.bfr() print(rocket_data)","title":"Rocket Information"}]}